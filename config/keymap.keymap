#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt { tapping-term-ms = <180>; };

&lt { tapping-term-ms = <180>; };

&sl { release-after-ms = <2000>; };

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <43 42 44 30 18 6 7 19 31 33 9 8 20 32 21 46 47 35 34 22 23 10 11>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        m_lower: m_lower {
            compatible = "zmk,behavior-tap-dance";
            label = "M_LOWER";
            #binding-cells = <0>;
            bindings = <&lt 1 LANG2>, <&kp LG(SPACE)>, <&kp LA(SPACE)>;
        };

        tog_on: tog_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_ON";
            #binding-cells = <1>;
        };

        tof_off: tof_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOF_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_m {
            bindings = <
&kp ESC    &kp Q         &kp W        &kp F         &kp P           &kp G     &kp J        &kp L         &kp U        &kp Y             &kp APOS      &kp EQUAL
&kp TAB    &hml LCTRL A  &hml LALT R  &hml LCMD S   &hml LSHFT T    &kp D     &kp H        &hmr RSHFT N  &hmr LCMD E  &hmr LALT I       &hmr RCTRL O  &kp MINUS
&kp LSHFT  &kp Z         &kp X        &kp C         &kp V           &kp B     &kp K        &kp M         &kp COMMA    &kp DOT           &kp FSLH      &kp SEMI
&mo 4      &none         &kp LCTRL    &mt LALT DEL  &mt LGUI SPACE  &m_lower  &lt 2 LANG1  &kp ENTER     &kp BSPC     &kp LEFT_BRACKET  &kp RBKT      &mo 4
            >;
        };

        lower_m {
            bindings = <
&kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4         &kp N5    &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp BSLH
&trans     &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT      &mkp MB4  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none   &none
&trans     &none      &none     &none     &kp LS(LG(V))  &mkp MB5  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none   &none
&trans     &trans     &trans    &trans    &trans         &trans    &trans    &trans     &kp DEL    &trans     &trans  &trans
            >;
        };

        raise_m {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET        &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR   &kp PIPE
&trans     &kp F1    &kp F2   &kp F3    &kp F4    &kp F5     &kp LS(LC(TAB))  &kp RSHFT  &kp LGUI   &kp LALT  &kp RCTRL  &none
&trans     &kp F6    &kp F7   &kp F8    &kp F9    &kp F10    &kp LC(TAB)      &none      &none      &none     &none      &none
&trans     &kp F11   &kp F12  &trans    &trans    &trans     &trans           &trans     &trans     &trans    &trans     &trans
            >;
        };

        adjust_m {
            bindings = <
&none   &kp C_BRI_DN  &kp C_BRI_UP  &none   &none   &none   &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
&trans  &none         &none         &none   &none   &none   &none       &none             &none       &none       &none         &none
&trans  &none         &none         &none   &none   &none   &none       &none             &none       &none       &none         &none
&trans  &trans        &trans        &trans  &trans  &trans  &trans      &trans            &trans      &trans      &trans        &trans
            >;
        };

        template {
            bindings = <
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
&trans  &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
&trans  &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_mac {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
